AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 Launch Template + Auto Scaling Group registered to an ALB Target Group

Parameters:
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets where EC2 instances will launch
  InstanceSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group to attach to instances (must allow 80 from ALB SG)
  TargetGroupArn:
    Type: String
    Description: Target Group ARN to register instances with
  InstanceType:
    Type: String
    Default: t3.micro
    Description: EC2 instance type
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Existing EC2 key pair for SSH access
  DesiredCapacity:
    Type: Number
    Default: 1
  MinSize:
    Type: Number
    Default: 1
  MaxSize:
    Type: Number
    Default: 2
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Description: AL2 AMI via SSM Parameter
  NatGatewayId:
    Type: String
    Description: Dependency handle to ensure NAT is created before ASG (not used directly)

Mappings: {}

Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !Ref InstanceSecurityGroupId
        KeyName: !Ref KeyName
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            set -e
            exec > /var/log/user-data.log 2>&1
            retries=0
            sleep 20
            until yum -y install httpd; do
              retries=$((retries+1))
              if [ "$retries" -ge 10 ]; then exit 1; fi
              sleep $((retries*30))
            done
            echo "hello from asg behind alb" > /var/www/html/index.html
            systemctl enable httpd
            systemctl restart httpd

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      DesiredCapacity: !Ref DesiredCapacity
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      TargetGroupARNs:
        - !Ref TargetGroupArn
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      HealthCheckType: ELB
      HealthCheckGracePeriod: 600
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-web'
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 0
        MaxBatchSize: 1
        PauseTime: PT2M
        WaitOnResourceSignals: false

Outputs:
  LaunchTemplateId:
    Value: !Ref LaunchTemplate
    Description: ID of the Launch Template
  AutoScalingGroupName:
    Value: !Ref AutoScalingGroup
    Description: Name of the Auto Scaling Group