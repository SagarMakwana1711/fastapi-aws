AWSTemplateFormatVersion: '2010-09-09'
Description: Master stack with nested templates for Security + ALB

Parameters:
  BucketName:
    Type: String
    Description: S3 bucket name containing the nested templates
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Existing EC2 Key Pair to enable SSH access
  HttpPort:
    Type: Number
    Default: 80
    Description: ALB listener port
  AdminCidr:
    Type: String
    Default: ''
    Description: Optional CIDR (e.g., 203.0.113.10/32) allowed for SSH to instances. Leave blank to disable SSH.
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR for the VPC
  PublicSubnetCidrs:
    Type: List<String>
    Default: 10.0.0.0/24,10.0.1.0/24
    Description: Two public subnet CIDRs (comma-separated)
  PrivateSubnetCidrs:
    Type: List<String>
    Default: 10.0.10.0/24,10.0.11.0/24
    Description: Two private subnet CIDRs (comma-separated)


Resources:
  NetworkingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.${AWS::Region}.amazonaws.com/${BucketName}/nested/networking.yaml"
      Parameters:
        VpcCidr: !Ref VpcCidr
        PublicSubnetCidrs: !Join [ ",", !Ref PublicSubnetCidrs ]
        PrivateSubnetCidrs: !Join [ ",", !Ref PrivateSubnetCidrs ]

  SecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.${AWS::Region}.amazonaws.com/${BucketName}/nested/security.yaml"
      Parameters:
        VpcId: !GetAtt NetworkingStack.Outputs.VpcId
        AdminCidr: !Ref AdminCidr

  ALBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.${AWS::Region}.amazonaws.com/${BucketName}/nested/alb.yaml"
      Parameters:
        VpcId: !GetAtt NetworkingStack.Outputs.VpcId
        SubnetIds: !GetAtt NetworkingStack.Outputs.PublicSubnetIds
        ALBSecurityGroupId: !GetAtt SecurityStack.Outputs.ALBSecurityGroupId
        HttpPort: !Ref HttpPort

  ComputeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.${AWS::Region}.amazonaws.com/${BucketName}/nested/compute-asg.yaml"
      Parameters:
        SubnetIds: !GetAtt NetworkingStack.Outputs.PrivateSubnetAId
        InstanceSecurityGroupId: !GetAtt SecurityStack.Outputs.InstanceSecurityGroupId
        TargetGroupArn: !GetAtt ALBStack.Outputs.TargetGroupArn
        InstanceType: "t3.micro"
        DesiredCapacity: "1"
        MinSize: "1"
        MaxSize: "2"
        KeyName: !Ref KeyName
        NatGatewayId: !GetAtt NetworkingStack.Outputs.NatGatewayId

Outputs:
  VpcId:
    Value: !GetAtt NetworkingStack.Outputs.VpcId
  PublicSubnetIds:
    Value: !GetAtt NetworkingStack.Outputs.PublicSubnetIds
  PrivateSubnetIds:
    Value: !GetAtt NetworkingStack.Outputs.PrivateSubnetIds
  ALBDNSName:
    Description: DNS name of the Application Load Balancer
    Value: !GetAtt ALBStack.Outputs.LoadBalancerDNSName
  TargetGroupArn:
    Description: ARN of the Target Group
    Value: !GetAtt ALBStack.Outputs.TargetGroupArn
  ALBSecurityGroupId:
    Description: ALB Security Group ID
    Value: !GetAtt SecurityStack.Outputs.ALBSecurityGroupId
  AutoScalingGroupName:
    Description: Name of the ASG
    Value: !GetAtt ComputeStack.Outputs.AutoScalingGroupName